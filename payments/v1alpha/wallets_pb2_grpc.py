# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from payments.v1alpha import wallets_pb2 as payments_dot_v1alpha_dot_wallets__pb2


class WalletsStub(object):
    """Wallet service provides wallet management functionality.

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateWallet = channel.unary_unary(
                '/com.seed.payments.v1alpha.Wallets/CreateWallet',
                request_serializer=payments_dot_v1alpha_dot_wallets__pb2.CreateWalletRequest.SerializeToString,
                response_deserializer=payments_dot_v1alpha_dot_wallets__pb2.Wallet.FromString,
                )
        self.RemoveWallet = channel.unary_unary(
                '/com.seed.payments.v1alpha.Wallets/RemoveWallet',
                request_serializer=payments_dot_v1alpha_dot_wallets__pb2.WalletRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.ImportWallet = channel.unary_unary(
                '/com.seed.payments.v1alpha.Wallets/ImportWallet',
                request_serializer=payments_dot_v1alpha_dot_wallets__pb2.ImportWalletRequest.SerializeToString,
                response_deserializer=payments_dot_v1alpha_dot_wallets__pb2.Wallet.FromString,
                )
        self.ExportWallet = channel.unary_unary(
                '/com.seed.payments.v1alpha.Wallets/ExportWallet',
                request_serializer=payments_dot_v1alpha_dot_wallets__pb2.WalletRequest.SerializeToString,
                response_deserializer=payments_dot_v1alpha_dot_wallets__pb2.ExportWalletResponse.FromString,
                )
        self.GetWalletBalance = channel.unary_unary(
                '/com.seed.payments.v1alpha.Wallets/GetWalletBalance',
                request_serializer=payments_dot_v1alpha_dot_wallets__pb2.WalletRequest.SerializeToString,
                response_deserializer=payments_dot_v1alpha_dot_wallets__pb2.GetWalletBalanceResponse.FromString,
                )
        self.ListWallets = channel.unary_unary(
                '/com.seed.payments.v1alpha.Wallets/ListWallets',
                request_serializer=payments_dot_v1alpha_dot_wallets__pb2.ListWalletsRequest.SerializeToString,
                response_deserializer=payments_dot_v1alpha_dot_wallets__pb2.ListWalletsResponse.FromString,
                )
        self.GetWallet = channel.unary_unary(
                '/com.seed.payments.v1alpha.Wallets/GetWallet',
                request_serializer=payments_dot_v1alpha_dot_wallets__pb2.WalletRequest.SerializeToString,
                response_deserializer=payments_dot_v1alpha_dot_wallets__pb2.Wallet.FromString,
                )
        self.UpdateWalletName = channel.unary_unary(
                '/com.seed.payments.v1alpha.Wallets/UpdateWalletName',
                request_serializer=payments_dot_v1alpha_dot_wallets__pb2.UpdateWalletNameRequest.SerializeToString,
                response_deserializer=payments_dot_v1alpha_dot_wallets__pb2.Wallet.FromString,
                )
        self.GetDefaultWallet = channel.unary_unary(
                '/com.seed.payments.v1alpha.Wallets/GetDefaultWallet',
                request_serializer=payments_dot_v1alpha_dot_wallets__pb2.GetDefaultWalletRequest.SerializeToString,
                response_deserializer=payments_dot_v1alpha_dot_wallets__pb2.Wallet.FromString,
                )
        self.SetDefaultWallet = channel.unary_unary(
                '/com.seed.payments.v1alpha.Wallets/SetDefaultWallet',
                request_serializer=payments_dot_v1alpha_dot_wallets__pb2.SetDefaultWalletRequest.SerializeToString,
                response_deserializer=payments_dot_v1alpha_dot_wallets__pb2.Wallet.FromString,
                )


class WalletsServicer(object):
    """Wallet service provides wallet management functionality.

    """

    def CreateWallet(self, request, context):
        """CreateWallet Created a seed wallet based on mnemonics.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveWallet(self, request, context):
        """RemoveWallet deletes a wallet locally. It can be later imported
        with the necessary credentials and no funds will be lost.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ImportWallet(self, request, context):
        """ImportWallet Imports a 3rd party (compatible) wallet with credentials.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExportWallet(self, request, context):
        """ExportWallet Export the wallet credentials so they can be imported and
        used with a 3rd party compatible app.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetWalletBalance(self, request, context):
        """ListWallets lists all available wallets for the account.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListWallets(self, request, context):
        """ListWallets lists all available wallets for the account.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetWallet(self, request, context):
        """GetWallet gets a specific wallet.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateWalletName(self, request, context):
        """UpdateWalletName changes the name of the wallet. This does not have any
        implications on payments. Name is just for user convenience. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDefaultWallet(self, request, context):
        """GetDefaultWallet returns the default wallet where payments are going
        to be collected at. Also, this wallet will be used to make payments.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetDefaultWallet(self, request, context):
        """SetDefaultWallet changes the default wallet where payments are going 
        to be collected at. Also, this wallet will be used to make payments.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_WalletsServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateWallet': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateWallet,
                    request_deserializer=payments_dot_v1alpha_dot_wallets__pb2.CreateWalletRequest.FromString,
                    response_serializer=payments_dot_v1alpha_dot_wallets__pb2.Wallet.SerializeToString,
            ),
            'RemoveWallet': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveWallet,
                    request_deserializer=payments_dot_v1alpha_dot_wallets__pb2.WalletRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'ImportWallet': grpc.unary_unary_rpc_method_handler(
                    servicer.ImportWallet,
                    request_deserializer=payments_dot_v1alpha_dot_wallets__pb2.ImportWalletRequest.FromString,
                    response_serializer=payments_dot_v1alpha_dot_wallets__pb2.Wallet.SerializeToString,
            ),
            'ExportWallet': grpc.unary_unary_rpc_method_handler(
                    servicer.ExportWallet,
                    request_deserializer=payments_dot_v1alpha_dot_wallets__pb2.WalletRequest.FromString,
                    response_serializer=payments_dot_v1alpha_dot_wallets__pb2.ExportWalletResponse.SerializeToString,
            ),
            'GetWalletBalance': grpc.unary_unary_rpc_method_handler(
                    servicer.GetWalletBalance,
                    request_deserializer=payments_dot_v1alpha_dot_wallets__pb2.WalletRequest.FromString,
                    response_serializer=payments_dot_v1alpha_dot_wallets__pb2.GetWalletBalanceResponse.SerializeToString,
            ),
            'ListWallets': grpc.unary_unary_rpc_method_handler(
                    servicer.ListWallets,
                    request_deserializer=payments_dot_v1alpha_dot_wallets__pb2.ListWalletsRequest.FromString,
                    response_serializer=payments_dot_v1alpha_dot_wallets__pb2.ListWalletsResponse.SerializeToString,
            ),
            'GetWallet': grpc.unary_unary_rpc_method_handler(
                    servicer.GetWallet,
                    request_deserializer=payments_dot_v1alpha_dot_wallets__pb2.WalletRequest.FromString,
                    response_serializer=payments_dot_v1alpha_dot_wallets__pb2.Wallet.SerializeToString,
            ),
            'UpdateWalletName': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateWalletName,
                    request_deserializer=payments_dot_v1alpha_dot_wallets__pb2.UpdateWalletNameRequest.FromString,
                    response_serializer=payments_dot_v1alpha_dot_wallets__pb2.Wallet.SerializeToString,
            ),
            'GetDefaultWallet': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDefaultWallet,
                    request_deserializer=payments_dot_v1alpha_dot_wallets__pb2.GetDefaultWalletRequest.FromString,
                    response_serializer=payments_dot_v1alpha_dot_wallets__pb2.Wallet.SerializeToString,
            ),
            'SetDefaultWallet': grpc.unary_unary_rpc_method_handler(
                    servicer.SetDefaultWallet,
                    request_deserializer=payments_dot_v1alpha_dot_wallets__pb2.SetDefaultWalletRequest.FromString,
                    response_serializer=payments_dot_v1alpha_dot_wallets__pb2.Wallet.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'com.seed.payments.v1alpha.Wallets', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Wallets(object):
    """Wallet service provides wallet management functionality.

    """

    @staticmethod
    def CreateWallet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.seed.payments.v1alpha.Wallets/CreateWallet',
            payments_dot_v1alpha_dot_wallets__pb2.CreateWalletRequest.SerializeToString,
            payments_dot_v1alpha_dot_wallets__pb2.Wallet.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveWallet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.seed.payments.v1alpha.Wallets/RemoveWallet',
            payments_dot_v1alpha_dot_wallets__pb2.WalletRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ImportWallet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.seed.payments.v1alpha.Wallets/ImportWallet',
            payments_dot_v1alpha_dot_wallets__pb2.ImportWalletRequest.SerializeToString,
            payments_dot_v1alpha_dot_wallets__pb2.Wallet.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ExportWallet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.seed.payments.v1alpha.Wallets/ExportWallet',
            payments_dot_v1alpha_dot_wallets__pb2.WalletRequest.SerializeToString,
            payments_dot_v1alpha_dot_wallets__pb2.ExportWalletResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetWalletBalance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.seed.payments.v1alpha.Wallets/GetWalletBalance',
            payments_dot_v1alpha_dot_wallets__pb2.WalletRequest.SerializeToString,
            payments_dot_v1alpha_dot_wallets__pb2.GetWalletBalanceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListWallets(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.seed.payments.v1alpha.Wallets/ListWallets',
            payments_dot_v1alpha_dot_wallets__pb2.ListWalletsRequest.SerializeToString,
            payments_dot_v1alpha_dot_wallets__pb2.ListWalletsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetWallet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.seed.payments.v1alpha.Wallets/GetWallet',
            payments_dot_v1alpha_dot_wallets__pb2.WalletRequest.SerializeToString,
            payments_dot_v1alpha_dot_wallets__pb2.Wallet.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateWalletName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.seed.payments.v1alpha.Wallets/UpdateWalletName',
            payments_dot_v1alpha_dot_wallets__pb2.UpdateWalletNameRequest.SerializeToString,
            payments_dot_v1alpha_dot_wallets__pb2.Wallet.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDefaultWallet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.seed.payments.v1alpha.Wallets/GetDefaultWallet',
            payments_dot_v1alpha_dot_wallets__pb2.GetDefaultWalletRequest.SerializeToString,
            payments_dot_v1alpha_dot_wallets__pb2.Wallet.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetDefaultWallet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.seed.payments.v1alpha.Wallets/SetDefaultWallet',
            payments_dot_v1alpha_dot_wallets__pb2.SetDefaultWalletRequest.SerializeToString,
            payments_dot_v1alpha_dot_wallets__pb2.Wallet.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
